{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elica\\\\Desktop\\\\Github\\\\reactApp\\\\my-website\\\\src\\\\pages\\\\gallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './gallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gallery = () => {\n  _s();\n  const [imageUrls, setImageUrls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [uploadSuccess, setUploadSuccess] = useState(null);\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/images/');\n        setImageUrls(response.data.urls);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-gallery\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: imageUrls.map((url, index) => {\n        const imageName = decodeURIComponent(url.split('/').pop());\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: url.startsWith('http') ? url : `http://${url}`,\n            alt: imageName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-name\",\n            children: imageName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"ZqhOXIz1MaLJtaooUiIsiNvBGso=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Gallery","_s","imageUrls","setImageUrls","loading","setLoading","error","setError","uploadError","setUploadError","uploadSuccess","setUploadSuccess","fetchImages","response","get","data","urls","err","message","className","children","map","url","index","imageName","decodeURIComponent","split","pop","src","startsWith","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elica/Desktop/Github/reactApp/my-website/src/pages/gallery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './gallery.css';\r\n\r\nconst Gallery = () => {\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [uploadError, setUploadError] = useState(null);\r\n  const [uploadSuccess, setUploadSuccess] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8000/images/');\r\n        setImageUrls(response.data.urls);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, []);\r\n\r\nreturn (\r\n    <div className=\"image-gallery\">\r\n      <div className=\"gallery\">\r\n        {imageUrls.map((url, index) => {\r\n          const imageName = decodeURIComponent(url.split('/').pop());\r\n          return (\r\n            <div key={index} className=\"image-container\">\r\n              <img src={url.startsWith('http') ? url : `http://${url}`} alt={imageName} />\r\n              <div className=\"image-name\">{imageName}</div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Gallery;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,+BAA+B,CAAC;QACjEX,YAAY,CAACU,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;MAClC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRb,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDO,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAER,oBACIb,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BrB,OAAA;MAAKoB,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrBlB,SAAS,CAACmB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QAC7B,MAAMC,SAAS,GAAGC,kBAAkB,CAACH,GAAG,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;QAC1D,oBACE5B,OAAA;UAAiBoB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC1CrB,OAAA;YAAK6B,GAAG,EAAEN,GAAG,CAACO,UAAU,CAAC,MAAM,CAAC,GAAGP,GAAG,GAAG,UAAUA,GAAG,EAAG;YAACQ,GAAG,EAAEN;UAAU;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC5EnC,OAAA;YAAKoB,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEI;UAAS;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAFrCX,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjC,EAAA,CArCID,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AAyCb,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}